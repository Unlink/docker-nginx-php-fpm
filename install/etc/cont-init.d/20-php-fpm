#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service
PROCESS_NAME="php-fpm"

if var_false "${ENABLE_PHP_FPM}" ; then
    print_notice "Disabling PHP-FPM Functionality"
    service_stop 20-php-fpm
    rm -rf /etc/logrotate.d/php-fpm
    rm -rf /etc/zabbix/php*.conf
    liftoff
fi

case "$CONTAINER_MODE" in
      "nginx")
            print_warn "Setting Container to operate in Nginx standalone mode"
            if [ "${PHP_FPM_HOST}" = "127.0.0.1" ] || [ "${PHP_FPM_HOST}" = "localhost" ] ; then
              print_error "Your PHP_FPM_HOST variable is still set to 'localhost' Please change it to something else"
              exit 1
            fi

            php_fpm_hosts=$(echo ${PHP_FPM_HOST} | tr "," "\n")
            echo "upstream php-pool {" >> /etc/nginx/nginx.conf.d/php-pool.conf
            for host in $php_fpm_hosts
            do
              echo $host
              echo "    server $host;" >> /etc/nginx/nginx.conf.d/php-pool.conf
            done
            echo "}" >> /etc/nginx/nginx.conf.d/php-pool.conf

            sed -i "/ server {/i### Multiple PHP-FPM Backends configuration" /etc/nginx/conf.d/default.conf
            sed -i "/ server {/i\include \/etc\/nginx\/nginx.conf.d\/php-pool.conf;" /etc/nginx/conf.d/default.conf
            sed -i "/ server {/i\ n "/etc/nginx/conf.d/default.conf
            sed -i "s#fastcgi_pass.*#fastcgi_pass php-pool;#g" /etc/nginx/nginx.conf.d/php-fpm.conf
            service_stop `basename "$0"`
            liftoff
      ;;
      "php-fpm")
            print_warn "Setting Container to operate in PHP-FPM standalone mode - You will need a seperate container for Nginx or another webserver to serve content"
            service_stop 10-nginx
            print_notice "Setting PHP-FPM to serve from ${PHP_WEBROOT}"
            sed -i "/[www]#/achdir = ${PHP_WEBROOT}" /etc/php/7.4/fpm/php-fpm.conf
      ;;
esac

### Adjust PHP Runtime Variables
sed -i -e "s#<PHP_LISTEN_PORT>#$PHP_FPM_LISTEN_PORT#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MAX_CHILDREN>#$PHP_FPM_MAX_CHILDREN#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MAX_EXECUTION_TIME>#$PHP_TIMEOUT#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MAX_REQUESTS>#$PHP_FPM_MAX_REQUESTS#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MAX_SPARE_SERVERS>#$PHP_FPM_MAX_SPARE_SERVERS#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MAX_START_SERVERS>#$PHP_FPM_START_SERVERS#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<MIN_SPARE_SERVERS>#$PHP_FPM_MIN_SPARE_SERVERS#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<PHP_HOST>#$PHP_FPM_HOST>#g" /etc/nginx/conf.d/default.conf
sed -i -e "s#<PHP_HOST>#${PHP_FPM_HOST}#g" /etc/nginx/nginx.conf.d/php-fpm.conf
sed -i -e "s#<PHP_LISTEN_PORT>#${PHP_FPM_LISTEN_PORT}#g" /etc/nginx/nginx.conf.d/php-fpm.conf
sed -i -e "s#<PHP_LOG_LOCATION>#$PHP_LOG_LOCATION#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<PHP_LOGFILE>#$PHP_LOG_FILE#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<PHP_MEMORY_LIMIT>#$PHP_MEMORY_LIMIT#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<PHP_TIMEOUT>#$PHP_TIMEOUT#g" /etc/nginx/nginx.conf.d/php-fpm.conf
sed -i -e "s#<POST_MAX_SIZE>#$PHP_POST_MAX_SIZE#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<PROCESS_MANAGER>#$PHP_FPM_PROCESS_MANAGER#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#<UPLOAD_MAX_SIZE>#$PHP_UPLOAD_MAX_SIZE#g" /etc/php/7.4/fpm/php-fpm.conf
sed -i -e "s#apc.shm_size.*#apc.shm_size=$PHP_APC_SHM_SIZE#g" /etc/php/7.4/mods-available/apcu.ini
sed -i -e "s#opcache.memory_consumption.*#opcache.memory_consumption=$PHP_OPCACHE_MEM_SIZE#g" /etc/php/7.4/mods-available/opcache.ini
sed -i -e "s#memory_limit = .*#memory_limit = $PHP_MEMORY_LIMIT#g" /etc/php/7.4/cli/php.ini
sed -i -e "s#max_input_time = .*#max_input_time = $PHP_TIMEOUT#g" /etc/php/7.4/cli/php.ini
sed -i -e "s#default_socket_timeout = .*#default_socket_timeout = $PHP_TIMEOUT#g" /etc/php/7.4/cli/php.ini
sed -i -e "s#post_max_size = .*#post_max_size = $PHP_UPLOAD_MAX_SIZE#g" /etc/php/7.4/cli/php.ini
sed -i -e "s#upload_max_filesize = .*#upload_max_filesize = $PHP_UPLOAD_MAX_SIZE#g" /etc/php/7.4/cli/php.ini
### Disable Opcache
if [ "$PHP_APC_SHM_SIZE" = "0" ]; then
  sed -i -e "s/apc.enabled=1/apc.enabled=0/g" /etc/php/7.4/mods-available/acpu.ini
fi

if [ "$PHP_OPCACHE_MEM_SIZE" = "0" ]; then
  sed -i -e "s/opcache.enable=1/opcache.enable=0/g" /etc/php/7.4/mods-available/opcache.ini
  sed -i -e "s/opcache.enable_cli=1/opcache.enable_cli=0/g" /etc/php/7.4/mods-available/opcache.ini
fi

if var_true $PHP_ENABLE_ERRORS ; then
  sed -i -e "\#php_flag[display_errors]#d" /etc/php/7.4/fpm/php-fpm.conf
fi

### Debug Mode
if var_true $PHP_ENABLE_XDEBUG ; then
  PHP_XDEBUG_PROFILER_DIR=${PHP_XDEBUG_PROFILER_DIR:-"${PHP_LOG_DIR}/xdebug/"}
  PHP_XDEBUG_PROFILER_ENABLE=${PHP_XDEBUG_PROFILER_ENABLE:-"0"}
  PHP_XDEBUG_PROFILER_ENABLE_TRIGGER=${PHP_XDEBUG_PROFILER_ENABLE_TRIGGER:-"0"}
  PHP_XDEBUG_REMOTE_AUTOSTART=${PHP_XDEBUG_REMOTE_AUTOSTART:-"1"}
  PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK:-"0"}
  PHP_XDEBUG_REMOTE_ENABLE=${PHP_XDEBUG_REMOTE_ENABLE:-"1"}
  PHP_XDEBUG_REMOTE_HANDLER=${PHP_XDEBUG_REMOTE_HANDLER:-"dbgp"}
  PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-"127.0.0.1"}
  PHP_XDEBUG_REMOTE_PORT=${PHP_XDEBUG_REMOTE_PORT:-"9090"}

  echo "zend_extension=xdebug.so" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.default_enable = 1" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.profiler_enable= ${PHP_XDEBUG_PROFILER_ENABLE}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.profiler_enable_trigger= ${PHP_XDEBUG_PROFILER_ENABLE_TRIGGER}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.profiler_output_dir='${PHP_XDEBUG_PROFILER_DIR}'" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_autostart = ${PHP_XDEBUG_REMOTE_AUTOSTART}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_connect_back = ${PHP_XDEBUG_REMOTE_CONNECT_BACK}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_enable = ${PHP_XDEBUG_REMOTE_ENABLE}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_handler = ${PHP_XDEBUG_REMOTE_HANDLER}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_host = ${PHP_XDEBUG_REMOTE_HOST}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  echo "xdebug.remote_port = ${PHP_XDEBUG_REMOTE_PORT}" >> /etc/php/7.4/fpm/conf.d/xdebug.ini
  PHP_LOG_LEVEL=debug
  print_notice "DEBUGGING MODE ACTIVATED: Please use your IDE to connect to: ${PHP_XDEBUG_REMOTE_HOST}:${PHP_XDEBUG_REMOTE_PORT}"
  if [ "$PHP_XDEBUG_PROFILER_ENABLE" = "1" ]; then
    print_notice "PROFILING MODE ACTIVATED: Please find the profiler logs at: ${PHP_XDEBUG_PROFILER_DIR}"
    mkdir -p $PHP_XDEBUG_PROFILER_DIR
    chown -R nginx $PHP_XDEBUG_PROFILER_DIR
  fi
fi

### SMTP Config
echo 'sendmail_path="/usr/bin/msmtp -C /etc/msmtprc -t "' > /etc/php/7.4/fpm/conf.d/smtp.ini

### Timezone Config
echo "date.timezone="`cat /etc/timezone` >> /etc/php/7.4/fpm/conf.d/timezone.ini
sed -i -e "s#date.timezone = .*#date.timezone = `cat /etc/timezone`#g" /etc/php/7.4/fpm/php.ini

### PHP Log Level
sed -i -e "s/<PHP_LOG_LEVEL>/$PHP_LOG_LEVEL/g" /etc/php/7.4/fpm/php-fpm.conf

### Create Log Directories
mkdir -p ${PHP_LOG_LOCATION}
chown -R ${NGINX_USER}:${NGINX_GROUP} ${PHP_LOG_LOCATION}

### Update Logrotate
sed -i -e "s#<PHP_LOG_LOCATION>#${PHP_LOG_LOCATION}#g" /etc/logrotate.d/php-fpm

#### Create Sample PHP File if doesn't exist
if var_true $PHP_ENABLE_CREATE_SAMPLE_PHP ; then
  if [ ! -f "${NGINX_WEBROOT}/index.php" ] ; then
     print_notice "Creating sample index.php"
     mkdir -p ${NGINX_WEBROOT}
     cat <<EOF > ${NGINX_WEBROOT}/index.php
  <html>
  <title>Default Page</title>
  <h2>Container is working</h2>
  Congratulations! Your PHP-FPM image is working. You are seeing this because you don't have an index.php file in your ${NGINX_WEBROOT} directory.<br />
  <?php phpinfo();?>
  </html>
EOF
  fi
fi

#### Disable Extensions
if var_false $PHP_ENABLE_KITCHENSINK ; then
    unset PHP_ENABLE_CREATE_SAMPLE_PHP
    unset PHP_ENABLE_DISPLAY_ERRORS
    php_plugins_enabled=`set -o posix; set | sort | grep PHP_ENABLE_ | grep TRUE |sed -e 's/PHP_ENABLE_//g' | sed -e 's/=TRUE//g' | awk -vRS="" -vOFS=', ' '$1=$1' | tr A-Z a-z`
    print_notice "PHP-FPM Preparing to start with the following plugins enabled: ${php_plugins_enabled}"
    if var_false $PHP_ENABLE_APCU ; then phpdismod apcu ; fi;
    if var_false $PHP_ENABLE_BCMATH ; then phpdismod bcmath ; fi;
    if var_false $PHP_ENABLE_BZ2 ; then  phpdismod bz2; fi;
    if var_false $PHP_ENABLE_CALENDAR ; then phpdismod calendar; fi;
    if var_false $PHP_ENABLE_CTYPE ; then phpdismod ctype ; fi;
    if var_false $PHP_ENABLE_CURL ; then phpdismod curl ; fi;
    if var_false $PHP_ENABLE_DOM ; then phpdismod dom ; fi;
    if var_false $PHP_ENABLE_ENCHANT ; then phpdismod enchant ; fi;
    if var_false $PHP_ENABLE_EXIF ; then  phpdismod exif; fi;
    if var_false $PHP_ENABLE_FILEINFO ; then phpdismod fileinfo; fi;
    if var_false $PHP_ENABLE_FTP ; then  phpdismod ftp; fi;
    if var_false $PHP_ENABLE_GD ; then phpdismod gd ; fi;
    if var_false $PHP_ENABLE_GETTEXT ; then  phpdismod gettext; fi;
    if var_false $PHP_ENABLE_ICONV ; then phpdismod iconv ; fi;
    if var_false $PHP_ENABLE_IMAP ; then phpdismod imap ; fi;
    if var_false $PHP_ENABLE_INTL ; then phpdismod intl ; fi;
    if var_false $PHP_ENABLE_JSON ; then phpdismod json ; fi;
    if var_false $PHP_ENABLE_LDAP ; then phpdismod ldap ; fi;
    if var_false $PHP_ENABLE_MBSTRING ; then phpdismod mbstring ; fi;
    if var_false $PHP_ENABLE_MYSQLI ; then  phpdismod mysqli; fi;
    if var_false $PHP_ENABLE_MYSQLND ; then  phpdismod mysqlnd; fi;
    if var_false $PHP_ENABLE_ODBC ; then  phpdismod odbc; fi;
    if var_false $PHP_ENABLE_OPCACHE ; then phpdismod opcache ; fi;
    if var_false $PHP_ENABLE_PDO ; then phpdismod pdo ; fi;
    if var_false $PHP_ENABLE_PDO_MYSQL ; then phpdismod pdo_mysql ; fi;
    if var_false $PHP_ENABLE_PDO_SQLITE ; then phpdismod pdo_sqlite ; fi;
    if var_false $PHP_ENABLE_PGSQL ; then  phpdismod 00_pgsql.ini; fi;
    if var_false $PHP_ENABLE_PHAR ; then phpdismod phar ; fi;
    if var_false $PHP_ENABLE_POSIX ; then  phpdismod posix; fi;
    if var_false $PHP_ENABLE_PSPELL ; then  phpdismod pspell; fi;
    #if var_false $PHP_ENABLE_RECODE ; then  phpdismod recode; fi;
    if var_false $PHP_ENABLE_SHMOP ; then  phpdismod shmop; fi;
    if var_false $PHP_ENABLE_SIMPLEXML ; then  phpdismod simplexml; fi;
    if var_false $PHP_ENABLE_SOAP ; then  phpdismod soap; fi;
    if var_false $PHP_ENABLE_SOCKETS ; then  phpdismod sockets; fi;
    if var_false $PHP_ENABLE_SQLITE3 ; then  phpdismod sqlite3; fi;
    if var_false $PHP_ENABLE_TIDY ; then  phpdismod tidy; fi;
    if var_false $PHP_ENABLE_TOKENIZER ; then  phpdismod tokenizer; fi;
    #if var_false $PHP_ENABLE_WDDX ; then  phpdismod wddx; fi;
    if var_false $PHP_ENABLE_XDEBUG ; then rm -rf /etc/php/7.4/fpm/conf.d/xdebug.ini ; fi;
    if var_false $PHP_ENABLE_XML ; then phpdismod xml ; fi;
    if var_false $PHP_ENABLE_XMLREADER ; then phpdismod xmlreader ; fi;
    if var_false $PHP_ENABLE_XMLRPC ; then  phpdismod xmlrpc; fi;
    if var_false $PHP_ENABLE_XMLWRITER ; then  phpdismod xmlwriter; fi;
    if var_false $PHP_ENABLE_ZIP ; then  phpdismod zip; fi;
else
  print_warn "Enabling Kitchen Sink mode and allowing all plugins to be active"
fi

if [ "$NGINX_AUTHENTICATION_TYPE" = "LLNG" ]; then
    print_notice "Adding LLNG Authentication parameters to nginx configuration"
    sed -i '/fastcgi_index.*;/a\ \ \ \ \ \ \ \ \ \ include \/etc\/nginx\/nginx.conf.d\/authentication\/llng_auth_request;' /etc/nginx/conf.d/*.conf
    sed -i '/fastcgi_index.*;/a\ \ \ \ \ \ \ \ \ \ include \/etc\/nginx\/nginx.conf.d\/authentication\/llng_params;' /etc/nginx/conf.d/default.conf
    sed -i '/fastcgi_index.*;/a\ \ \ \ \ \ \ \ \ \ ### LLNG Authentication handler' /etc/nginx/conf.d/default.conf
fi

chmod -R 0755 /etc/php
chown -R root:${NGINX_GROUP} /etc/php

liftoff
